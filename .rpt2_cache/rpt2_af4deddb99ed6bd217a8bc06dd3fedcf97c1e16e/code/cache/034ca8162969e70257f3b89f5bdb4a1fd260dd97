{"map":"{\"version\":3,\"file\":\"ReactReconciler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/ReactReconciler.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,YAA2B,MAAM,gBAAgB,CAAA;AACxD,OAAO,uBAAuB,MAAM,2BAA2B,CAAA;AAC/D,OAAO,iBAAiB,MAAM,qBAAqB,CAAA;AAKnD,IAAM,eAAe,GAAG;IAEpB,gBAAgB,EAAhB,UAAiB,OAAkB,EAAE,SAAsB;QACvD,IAAI,YAAkC,CAAC;QACvC,IAAI,OAAO,YAAY,YAAY,EAAE;YACjC,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,EAAE;gBACrC,YAAY,GAAG,IAAI,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;aAC5D;iBAAM;gBACH,YAAY,GAAG,IAAI,uBAAuB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;aAClE;SACJ;aAAM;YACH,YAAY,GAAG,IAAI,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SAC5D;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,gBAAgB,YAAC,gBAAsC,EAAE,WAAsB;QAC3E,IAAI,WAAW,YAAY,YAAY,EAAE;YACrC,IAAI,OAAO,WAAW,CAAC,OAAO,KAAK,QAAQ,IAAI,gBAAgB,YAAY,iBAAiB,EAAE;gBAC1F,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;aAClD;iBAAM,IAAI,gBAAgB,YAAY,uBAAuB,EAAE;gBAC5D,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;aAClD;iBAAM;gBACH,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,gBAAgB,YAAY,iBAAiB,EAAE;YACtD,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;SAClD;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC/D;IACL,CAAC;IAED,0BAA0B,EAA1B,UACI,iBAA4B,EAC5B,iBAA4B;QAE5B,IAAI,OAAO,iBAAiB,KAAK,QAAQ,IAAI,OAAO,iBAAiB,KAAK,QAAQ,EAAE;YAChF,OAAO,OAAO,iBAAiB,KAAK,QAAQ,IAAI,OAAO,iBAAiB,KAAK,QAAQ,CAAC;SACzF;aAAM,IAAI,iBAAiB,YAAY,YAAY,IAAI,iBAAiB,YAAY,YAAY,EAAE;YAC/F,OAAO,iBAAiB,CAAC,OAAO,KAAK,iBAAiB,CAAC,OAAO,IAAI,iBAAiB,CAAC,GAAG,KAAK,iBAAiB,CAAC,GAAG,CAAC;SACrH;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED,gBAAgB,YAAC,gBAAsC;QACnD,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC;CAEJ,CAAA;AAED,eAAe,eAAe,CAAC\"}","code":"import ReactElement from \"./ReactElement\";\r\nimport ReactCompositeComponent from \"./ReactCompositeComponent\";\r\nimport ReactDOMComponent from \"./ReactDOMComponent\";\r\nvar ReactReconciler = {\r\n    initialComponent: function (element, container) {\r\n        var internalInst;\r\n        if (element instanceof ReactElement) {\r\n            if (typeof element.tagName === \"string\") {\r\n                internalInst = new ReactDOMComponent(element, container);\r\n            }\r\n            else {\r\n                internalInst = new ReactCompositeComponent(element, container);\r\n            }\r\n        }\r\n        else {\r\n            internalInst = new ReactDOMComponent(element, container);\r\n        }\r\n        return internalInst;\r\n    },\r\n    receiveComponent: function (internalInstance, nextElement) {\r\n        if (nextElement instanceof ReactElement) {\r\n            if (typeof nextElement.tagName === \"string\" && internalInstance instanceof ReactDOMComponent) {\r\n                internalInstance.receiveComponent(nextElement);\r\n            }\r\n            else if (internalInstance instanceof ReactCompositeComponent) {\r\n                internalInstance.receiveComponent(nextElement);\r\n            }\r\n            else {\r\n                throw new Error(\"element and component are not compatible\");\r\n            }\r\n        }\r\n        else if (internalInstance instanceof ReactDOMComponent) {\r\n            internalInstance.receiveComponent(nextElement);\r\n        }\r\n        else {\r\n            throw new Error(\"element and component are not compatible\");\r\n        }\r\n    },\r\n    shouldUpdateReactComponent: function (prevRenderElement, nextRenderElement) {\r\n        if (typeof prevRenderElement === \"string\" || typeof prevRenderElement === \"number\") {\r\n            return typeof nextRenderElement === \"string\" || typeof prevRenderElement === \"number\";\r\n        }\r\n        else if (nextRenderElement instanceof ReactElement && prevRenderElement instanceof ReactElement) {\r\n            return prevRenderElement.tagName === nextRenderElement.tagName && prevRenderElement.key === nextRenderElement.key;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n    unmountComponent: function (internalInstance) {\r\n        internalInstance.unmountComponent();\r\n    }\r\n};\r\nexport default ReactReconciler;\r\n//# sourceMappingURL=ReactReconciler.js.map","dts":{"name":"/Users/tomxing/Documents/FakeReact/ReactReconciler.d.ts","writeByteOrderMark":false,"text":"import { ReactNode } from \"./ReactElement\";\r\nimport ReactCompositeComponent from \"./ReactCompositeComponent\";\r\nimport ReactDOMComponent from \"./ReactDOMComponent\";\r\nexport declare type ReactRenderComponent = ReactDOMComponent | ReactCompositeComponent;\r\ndeclare const ReactReconciler: {\r\n    initialComponent(element: ReactNode, container: HTMLElement): ReactRenderComponent;\r\n    receiveComponent(internalInstance: ReactRenderComponent, nextElement: ReactNode): void;\r\n    shouldUpdateReactComponent(prevRenderElement: ReactNode, nextRenderElement: ReactNode): Boolean;\r\n    unmountComponent(internalInstance: ReactRenderComponent): void;\r\n};\r\nexport default ReactReconciler;\r\n"}}
