{"map":"{\"version\":3,\"file\":\"ReactCompositeComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/ReactCompositeComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import ReactComponent, { isReactComponentClass, isPureComponentClass } from \"./ReactComponent\";\r\nimport ReactReconciler from \"./ReactReconciler\";\r\nimport shallowequal from \"./lib/shallowequal\";\r\nexport var instMapCompositeComponent = new Map();\r\nvar instMapDom = new Map();\r\nvar CompositeType;\r\n(function (CompositeType) {\r\n    CompositeType[CompositeType[\"ReactComponent\"] = 0] = \"ReactComponent\";\r\n    CompositeType[CompositeType[\"StateLessComponent\"] = 1] = \"StateLessComponent\";\r\n    CompositeType[CompositeType[\"PureComponent\"] = 2] = \"PureComponent\";\r\n})(CompositeType || (CompositeType = {}));\r\n;\r\nfunction transformStateLessToComponent(props) {\r\n    var component = new ReactComponent(props);\r\n    component.render = function () {\r\n        var internalInst = instMapCompositeComponent.get(this);\r\n        if (internalInst) {\r\n            var fn = internalInst._currentElement.tagName;\r\n            if (!isReactComponentClass(fn)) {\r\n                return fn(this.props);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return component;\r\n}\r\nvar ReactCompositeComponent = /** @class */ (function () {\r\n    function ReactCompositeComponent(node, container) {\r\n        this._currentElement = node;\r\n        this._container = container;\r\n    }\r\n    ReactCompositeComponent.prototype.mountComponent = function (replaceIndex, isInsert) {\r\n        if (replaceIndex !== undefined) {\r\n            this._replaceIndex = replaceIndex;\r\n        }\r\n        this._isInsert = !!isInsert;\r\n        var TagName = this._currentElement.tagName;\r\n        var isComponent = isReactComponentClass(TagName);\r\n        var props = this._currentElement.props;\r\n        if (isReactComponentClass(TagName)) {\r\n            this.inst = new TagName(props);\r\n            this._compositeType = CompositeType.ReactComponent;\r\n            if (isPureComponentClass(TagName)) {\r\n                this._compositeType = CompositeType.PureComponent;\r\n            }\r\n            else {\r\n                this._compositeType = CompositeType.ReactComponent;\r\n            }\r\n        }\r\n        else {\r\n            this.inst = transformStateLessToComponent(props);\r\n            this._compositeType = CompositeType.StateLessComponent;\r\n        }\r\n        // this.inst = new TagName(props);\r\n        instMapCompositeComponent.set(this.inst, this);\r\n        this._container && instMapDom.set(this.inst, this._container);\r\n        this.inst.componentWillMount && this.inst.componentWillMount();\r\n        this.mountChildComponent();\r\n        this.inst.componentDidMount && this.inst.componentDidMount();\r\n        if (this._currentElement.ref) {\r\n            this._ref = this._currentElement.ref;\r\n            this._ref(this.inst);\r\n        }\r\n    };\r\n    ReactCompositeComponent.prototype.isComponentClass = function (tagName) {\r\n        return tagName.prototype instanceof ReactComponent;\r\n    };\r\n    ReactCompositeComponent.prototype.initialInst = function () {\r\n    };\r\n    ReactCompositeComponent.prototype.mountChildComponent = function () {\r\n        this._renderComponent = ReactReconciler.initialComponent(this.inst.render(), this._container);\r\n        this._renderComponent.mountComponent(this._replaceIndex, this._isInsert);\r\n    };\r\n    ReactCompositeComponent.prototype.updateComponent = function (prevElement, nextElement) {\r\n        var nextProps = nextElement.props;\r\n        var prevProps = prevElement.props;\r\n        var nextState = this._processNewState(prevProps);\r\n        var shouldUpdate = true;\r\n        var isRealUpdate = !shallowequal(nextProps, prevProps) || !shallowequal(this.inst.state || null, nextState);\r\n        this.inst.componentWillReceiveProps && this.inst.componentWillReceiveProps(nextProps, {});\r\n        if (this.inst.shouldComponentUpdate) {\r\n            shouldUpdate = this.inst.shouldComponentUpdate(nextProps, nextState, {});\r\n        }\r\n        if (this._compositeType === CompositeType.PureComponent) {\r\n            shouldUpdate = isRealUpdate;\r\n        }\r\n        if (shouldUpdate) {\r\n            this._performComponentUpdate(nextElement, nextProps, nextState);\r\n            if (isRealUpdate && this._ref) {\r\n                this._ref(this.inst);\r\n            }\r\n        }\r\n        else {\r\n            this.inst.props = nextProps;\r\n            this.inst.state = nextState;\r\n            this._currentElement = nextElement;\r\n        }\r\n    };\r\n    ReactCompositeComponent.prototype._processNewState = function (prevProps) {\r\n        var state = this.inst.state;\r\n        if (this._peddingState && this._peddingState.length > 0) {\r\n            this._peddingState.forEach(function (changeState, index) {\r\n                Object.assign(state, typeof changeState === \"function\" ? changeState(state, prevProps) : changeState);\r\n            });\r\n            this._peddingState = [];\r\n            return state;\r\n        }\r\n        return null;\r\n    };\r\n    ReactCompositeComponent.prototype._performComponentUpdate = function (nextElement, nextProps, nextState) {\r\n        var prevProps;\r\n        var prevState;\r\n        var inst = this.inst;\r\n        var hasDidUpdate = !!inst.componentDidUpdate;\r\n        if (hasDidUpdate) {\r\n            prevProps = inst.props;\r\n            prevState = inst.state;\r\n        }\r\n        inst.componentWillUpdate && inst.componentWillUpdate(nextProps, nextState, {});\r\n        // 更新数据\r\n        inst.props = nextProps;\r\n        inst.state = nextState;\r\n        this._updateRenderComponent();\r\n        inst.componentDidUpdate && inst.componentDidUpdate(prevProps, prevState, {});\r\n    };\r\n    ReactCompositeComponent.prototype._updateRenderComponent = function () {\r\n        var prevComponentInstance = this._renderComponent;\r\n        var prevRenderElement = prevComponentInstance._currentElement;\r\n        var nextRenderElement = this.inst.render();\r\n        if (ReactReconciler.shouldUpdateReactComponent(prevRenderElement, nextRenderElement)) {\r\n            ReactReconciler.receiveComponent(prevComponentInstance, nextRenderElement);\r\n        }\r\n        else {\r\n            var container = this._container;\r\n            this.unmountComponent();\r\n            this._renderComponent = ReactReconciler.initialComponent(nextRenderElement, container);\r\n            this._renderComponent.mountComponent();\r\n        }\r\n    };\r\n    ReactCompositeComponent.prototype.receiveComponent = function (nextElement) {\r\n        if (!nextElement) {\r\n            nextElement = this._currentElement;\r\n        }\r\n        this.updateComponent(this._currentElement, nextElement);\r\n    };\r\n    ReactCompositeComponent.prototype.unmountComponent = function () {\r\n        var inst = this.inst;\r\n        inst.componentWillUnmount && inst.componentWillUnmount();\r\n        ReactReconciler.unmountComponent(this._renderComponent);\r\n        this._ref && this._ref(null);\r\n        delete this.inst;\r\n        delete this._renderComponent;\r\n        // delete this._container;\r\n        delete this._currentElement;\r\n        delete this._peddingState;\r\n        delete this._ref;\r\n        instMapCompositeComponent.delete(inst);\r\n    };\r\n    return ReactCompositeComponent;\r\n}());\r\nexport default ReactCompositeComponent;\r\n//# sourceMappingURL=ReactCompositeComponent.js.map","dts":{"name":"/Users/tomxing/Documents/FakeReact/ReactCompositeComponent.d.ts","writeByteOrderMark":false,"text":"import ReactElement, { SFC } from \"./ReactElement\";\r\nimport ReactComponent, { ComponentClass } from \"./ReactComponent\";\r\nimport { ReactRenderComponent } from \"./ReactReconciler\";\r\nexport declare let instMapCompositeComponent: Map<ReactComponent, ReactCompositeComponent>;\r\ninterface ReactCompositeComponent {\r\n    updateComponent<T>(prevElement: T, nextElement: T): void;\r\n}\r\ndeclare enum CompositeType {\r\n    ReactComponent = 0,\r\n    StateLessComponent = 1,\r\n    PureComponent = 2\r\n}\r\ndeclare class ReactCompositeComponent {\r\n    _currentElement: ReactElement<ComponentClass> | ReactElement<SFC>;\r\n    _renderComponent: ReactRenderComponent;\r\n    inst: ReactComponent;\r\n    _container: HTMLElement;\r\n    _peddingState: any[];\r\n    _replaceIndex: number;\r\n    _isInsert: boolean;\r\n    _compositeType: CompositeType;\r\n    _ref: (e: ReactComponent | null) => void;\r\n    constructor(node: ReactElement<ComponentClass>, container: HTMLElement);\r\n    mountComponent(replaceIndex?: number, isInsert?: boolean): void;\r\n    isComponentClass(tagName: ComponentClass | SFC): tagName is ComponentClass;\r\n    initialInst(): void;\r\n    mountChildComponent(): void;\r\n    _processNewState(prevProps?: any): any;\r\n    _performComponentUpdate(nextElement: ReactElement<ComponentClass>, nextProps: any, nextState: any): void;\r\n    _updateRenderComponent(): void;\r\n    receiveComponent(nextElement?: ReactElement<ComponentClass> | ReactElement<SFC>): void;\r\n    unmountComponent(): void;\r\n}\r\nexport default ReactCompositeComponent;\r\n"}}
